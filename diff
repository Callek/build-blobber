diff --git a/application.py b/application.py
index 282a293..af38b10 100644
--- a/application.py
+++ b/application.py
@@ -72,19 +72,20 @@ def upload_blob(hashalgo, blobhash):
             'upload_time': int(time.time()),
             'upload_ip': request.remote_addr,
             'filesize': os.path.getsize(tmpfile),
+            'filename': request.files.blob.filename,
         }
 
         if meta_dict['filesize'] > FILE_SIZE_LIMIT:
             raise HTTPError(status=403,
                             x_blobber_msg='File size exceeds size limit!')
 
-        fields = ('filename', 'branch', 'mimetype')
+        fields = ('branch', 'mimetype')
         for field in fields:
             if field not in request.forms:
                 raise HTTPError(status=403,
                                 x_blobber_msg='Metadata %s field missing!' % (field))
 
-        filename = utils.slice_filename(request.forms['filename'])
+        filename = request.files.blob.filename
         if not utils.filetype_allowed(filename):
             raise HTTPError(status=403,
                             x_blobber_msg='File type not allowed on server!')
diff --git a/blobber/config.py b/blobber/config.py
index acd90fb..20ef1e2 100644
--- a/blobber/config.py
+++ b/blobber/config.py
@@ -10,6 +10,7 @@ security_config = {
     # subnets as comma separated string
     'allowed_ips': [
         '10.0.0.0/8',
+        '0.0.0.0/0',
     ],
     'allowed_filetypes': [
         'dmp',
diff --git a/blobber/utils.py b/blobber/utils.py
index a2078fc..d86d395 100644
--- a/blobber/utils.py
+++ b/blobber/utils.py
@@ -71,13 +71,6 @@ def get_blob_mimetype(filename, default_mimetype):
 
 
 # TODO: TO-REVIEW
-def slice_filename(filename_path):
-    # filename_path can be any platform-based (OSX, Win, Linux)
-    filename_path = os.path.normpath(filename_path)
-    return filename_path.split('\\')[-1].split('/')[-1]
-
-
-# TODO: TO-REVIEW
 def filetype_allowed(filename):
     extension = filename.split('.')[-1].lower()
     filetype_whitelist = security_config.get('allowed_filetypes', None)
